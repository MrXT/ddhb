<?xml version="1.0" encoding="utf-8"?>
<project name="datacenter" basedir="." default="webwar">
	<!-- 读取配置文件 --> 
	<property file="build.properties" />
	
	
	<!-- 本地WebRoot目录 -->
	<property name="pro.webroot.dir" value="${base.dir}/WebRoot" />
	<property name="pro.web-inf.dir" value="${pro.webroot.dir}/WEB-INF" />
		
	<!-- 本地配置文件根目录 -->
	<property name="pro.config.dir" value="${base.dir}/configs" />
	<property name="pro.properties.dir" value="${pro.config.dir}/properties" />
	
	
	
	<!-- 指定打包发布地址(tomcat下) -->
	<property name="dist.dir" value="${tomcat.dir}/webapps/${project.name}" />

	<!-- tomcat目录 -->
	<property name="dist.web-inf.dir" value="${dist.dir}/WEB-INF" />
	<property name="dist.lib.dir" value="${dist.web-inf.dir}/lib" />
	<property name="dist.classes.dir" value="${dist.web-inf.dir}/classes" />
	
	<!-- 指定一个路径，路径下放指定的jar文件 -->
	<path id="classpath">
		<fileset dir="${tomcat.dir}/lib">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${dist.lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path> 
	
	<target name="clean">
		<delete>
			<fileset dir="${dist.dir}">
				<include name="**/*.*" />
			</fileset>
		</delete>
	</target>
	
	<target name="deleteproject">
		<delete includeemptydirs="true">
			<fileset dir="${dist.dir}">
			</fileset>
		</delete>
	</target>
	
	<target name="init">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.web-inf.dir}" />

		<!-- 不用创建lib这个目录了，因为不用了	<mkdir dir="${dist.lib.dir}" />-->
		<mkdir dir="${dist.classes.dir}" />
	</target>
	
	<!-- copy web:download & log & META_INF&resourse & WEB_INF/jsp & WEB_INF/web.xml -->
	<target name="copyweb">
		<copy todir="${dist.dir}" overwrite="no">
			<fileset dir="${pro.webroot.dir}">
				<include name="**/*.*" />
				<exclude name="/WEB-INF/classes/**" />
				<exclude name="/WEB-INF/lib/**" />
			</fileset>
		</copy>
		<copy todir="${dist.lib.dir}" overwrite="no">
			<fileset dir="${project.lib.dir}">
				<include name="*.*" />
			</fileset>
		</copy>
	</target>
	
	<!-- copy config:properties & xml & template -->
	<target name="copyconfig">
		<copy todir="${dist.classes.dir}/properties" overwrite="no">
			<fileset dir="${pro.configs.dir}/properties">
				<include name="generator.properties*" />
				<include name="jasper.properties*" />
				<include name="${jdbc.properties}*" />
				<include name="log4j.properties*" />
				<include name="mybatis.properties*" />
				<include name="system.properties*" />
			</fileset>
		</copy>
			
		<copy todir="${dist.classes.dir}/xml" overwrite="no" flatten="yes">
			<fileset dir="${pro.configs.dir}/xml">
				<include name="mybatis.xml" />
				<include name="spring.xml" />
				<include name="spring-mvc.xml" />
			</fileset>
		</copy>
		<copy todir="${dist.classes.dir}/template">
			<fileset dir="${pro.configs.dir}/template">
				<include name="**/*.*" />
				<include name="Controller.ftl" />
				<include name="EditJsp.ftl" />
				<include name="ManageJsp.ftl" />
				<include name="ManageJsp2.ftl" />
				<include name="Service.ftl" />
				<include name="ServiceImpl.ftl" />
			</fileset>
		</copy>
	</target> 
	
	<!--编码properties-->
	<target name="i18n">
		<native2ascii src="${pro.properties.dir}" encoding="UTF-8" includes="*.properties" dest="${dist.classes.dir}/properties">
		</native2ascii>
	</target>
		
	<!--项目编译begin-->	
	<target name="compile">
	
		<javac srcdir="${pro.framework_src.dir}" destdir="${dist.classes.dir}" debug="true" encoding="utf-8">
			<classpath refid="classpath" />
		</javac>
		
		<copy todir="${dist.classes.dir}" overwrite="true">
			<fileset dir="${pro.framework_src.dir}">
				<include name="**/*.xml" />
				<include name="**/*.vm" />
			</fileset>
		</copy>
		<native2ascii src="${pro.framework_src.dir}" encoding="utf-8" includes="**/*.properties" dest="${dist.classes.dir}" />
		
		<javac srcdir="${pro.src.dir}" destdir="${dist.classes.dir}" debug="true" encoding="utf-8" includeantruntime="on">
			<classpath refid="classpath" />
		</javac>
		<copy todir="${dist.classes.dir}" overwrite="true">
			<fileset dir="${pro.src.dir}">
				<include name="**/*.xml" />
				<include name="**/*.vm" />
			</fileset>
		</copy>
		<native2ascii src="${pro.src.dir}" encoding="utf-8" includes="**/*.properties" dest="${dist.classes.dir}" />
	
	</target>

							
	<!--项目编译end-->			
	<target name="pack" depends="init,copyweb,copyconfig,i18n,compile" />

	<!-- 根据现有框架,打war应用,如果单个系统部署,则运行此功能zhuzhong -->
	<target name="webwar" depends="pack">
		
		<!--如果全部项目部署在同一个tomcat下,则需要将公共的jar拿出来的,放在一个共享目录下-->
		<copy todir="${dist.lib.dir}">
			<fileset dir="${project.lib.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<war destfile="${dist.dir}.war" webxml="${dist.web-inf.dir}/web.xml">
		<!--	<classes dir="${dist.classes.dir}" />-->
			<fileset dir="${dist.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
	</target>
	
</project>