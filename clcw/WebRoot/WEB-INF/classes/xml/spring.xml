<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
				http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
														   
	default-lazy-init="true" default-autowire="byName">

	<description>Spring Config</description>

	<context:property-placeholder location="classpath*:properties/*.properties" />

	<context:annotation-config />

	<context:component-scan base-package="com.manzz">
		<context:include-filter type="regex" expression=".*.service.*" />
		<context:include-filter type="regex" expression=".*.domain.*" />
	</context:component-scan>

	<!-- 数据源配置,支持JTA -->
	<bean id="clcwDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<!-- uniqueResourceName保证唯一性就行 -->
		<property name="uniqueResourceName" value="mysql/clcw" />
		<property name="xaDataSourceClassName" value="${jdbc.xa.mysql}" />
		<property name="xaProperties">
			<props>
				<prop key="URL">${jdbc.url}</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
		<property name="minPoolSize"><value>${jdbc.atomikos.minPoolSize}</value></property>
		<property name="maxPoolSize"><value>${jdbc.atomikos.maxPoolSize}</value></property>
		<property name="maxLifetime"><value>${jdbc.atomikos.maxLifetime}</value></property>
	</bean>
	
	<bean id="gpsDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<!-- uniqueResourceName保证唯一性就行 -->
		<property name="uniqueResourceName" value="sqlserver/gps"/> 
		<property name="xaDataSourceClassName" value="${jdbc.xa.sqlserver}" />
        <property name="xaProperties">  
            <props>  
                <prop key="URL">${jdbc.gps.url}</prop>  
                <prop key="user">${jdbc.gps.username}</prop>  
                <prop key="password">${jdbc.gps.password}</prop>  
            </props>  
        </property>  
		<property name="minPoolSize"><value>${jdbc.atomikos.minPoolSize}</value></property>
		<property name="maxPoolSize"><value>${jdbc.atomikos.maxPoolSize}</value></property>
		<property name="maxLifetime"><value>${jdbc.atomikos.maxLifetime}</value></property>
	</bean>

	<!-- JTA事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<!-- 事务超时时间设置，单位：秒 -->
		<property name="transactionTimeout" value="300" />
	</bean>

	<bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<!-- 	
		<property name="allowCustomIsolationLevels" value="true"/> 
		-->
	</bean>

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.manzz..service..*.*(..))" />
		<aop:advisor advice-ref="serviceAdvice"	pointcut="execution(* com.manzz..service..*.*(..))" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="jtaTransactionManager">
		<tx:attributes>
			<tx:method name="do*" read-only="false" rollback-for="java.lang.Exception" />
			<tx:method name="query*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<tx:annotation-driven transaction-manager="jtaTransactionManager" proxy-target-class="true" />

	<bean id="serviceAdvice" class="com.manzz.framework.core.spring.interceptor.ServiceInterceptor">
		<property name="slowExecutionTime" value="3000" />
		<property name="logExceptionDetail" value="true" />
	</bean>

	<!-- mybatis Config -->
	<bean id="clcwSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="clcwDataSource" />
		<property name="configLocation" value="classpath:xml/mybatis.xml" />
		<property name="typeAliasesPackage" value="com.manzz.clcw.domain" />
		<!-- <property name="mapperLocations" value="classpath:/com/manzz/clcw/dao/*.xml"/> -->
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"	lazy-init="false">
		<property name="basePackage" value="com.manzz.clcw.*.*.dao,com.manzz.clcw.*.*.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="clcwSqlSessionFactory" />
	</bean>

	<bean id="gpsSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="gpsDataSource" />
		<property name="configLocation" value="classpath:xml/mybatis.xml" />
		<property name="typeAliasesPackage" value="com.manzz.gps.domain" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"	lazy-init="false">
		<property name="basePackage" value="com.manzz.gps.*.*.dao,com.manzz.gps.*.*.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="gpsSqlSessionFactory" />
	</bean>
	
	
	<bean name="webServiceImpl" class="com.manzz.clcw.module.ws.service.impl.WebServiceImpl" >
		<description>验证码类型</description>
		<property name="validateCodeTypes">
			<map>
				<entry key="1" >
					<bean class="com.manzz.clcw.domain.validcode.RegisterValidteCode" />
				</entry>
				<entry key="2">
					<bean class="com.manzz.clcw.domain.validcode.ResetPwdValidteCode" />
				</entry>
				<entry key="3">
					<bean class="com.manzz.clcw.domain.validcode.VisitorValidteCode" />
				</entry>
				<entry key="4">
					<bean class="com.manzz.clcw.domain.validcode.VisitorBuyTicketValidteCode" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- 错误代码 -->
	<util:map id="errorMap" map-class="java.util.HashMap">  
	    <entry key="00000" value="未知异常" />
	    <entry key="10000" value="请求参数错误"/>
	    <entry key="10001" value="手机号不正确"/>
	    <entry key="10002" value="密码为空"/>
	    <entry key="10003" value="参数deviceType不正确"/>
	    <entry key="10004" value="参数plateColorType不正确"/>
	    <entry key="10005" value="日期格式错误"/>
	    <entry key="10006" value="开始时间大于等于结束时间"/>
	    <entry key="10007" value="参数validCodeType不正确"/>
	    <entry key="20000" value="服务器类错误"/>
	    <entry key="20001" value="数据库异常"/>
	    <entry key="20002" value="服务器硬件故障"/>
	    <entry key="30000" value="业务类异常"/>
	    <entry key="30001" value="手机号码不存在，您可以快速注册成为橙客巴士用户"/> 
	    <entry key="30002" value="该手机号码已注册,请直接登录"/>
	    <entry key="30003" value="用户名或密码错误,请重新输入"/>
	    <entry key="30004" value="身份证信息无法识别"/>
	    <entry key="30005" value="身份证已存在"/>
	    <entry key="30006" value="没找到该用户，请联系管理员"/>
	    <entry key="30007" value="原密码错误,请重新输入"/>
	    <entry key="30008" value="发车时间已经超过当前时间，已经发车了"/>
	    <entry key="30009" value="该班次状态为 关闭"/>
	    <entry key="30010" value="没找到该订单"/>
	    <entry key="30011" value="票量不足"/>
	    <entry key="30012" value="没找到该票或该票没有付款"/>
	    <entry key="30013" value="已经检票了，不用再重复检票"/>
	    <entry key="30014" value="票数必须为正整数"/>
	    <entry key="30015" value="支付已超时，请重新购买"/>
	    <entry key="30016" value="您选择的班次已经发车，请重新选择班次"/>
	    <entry key="40000" value="第三方接口类错误"/>
	    <entry key="41000" value="短信接口错误"/>
	    <entry key="42000" value="安标接口错误"/>
	    <entry key="42001" value="安标接口调用失败"/>
	    <entry key="42002" value="安标接口数据解析失败"/>
	    <entry key="42003" value="安标接口返回错误"/>
	    <entry key="43000" value="GPS接口错误"/>
	    <entry key="43001" value="GPS接口调用失败"/>
	    <entry key="43002" value="GPS接口数据解析失败"/>
	    <entry key="43003" value="GPS接口返回错误"/>
	    <entry key="43004" value="历史轨迹查询日期超过两个自然日"/>  
	</util:map>
	
    <!-- quartz Config -->
    <!-- fmWtOrderformService已经注解驱动  此处不需要声明 -->
	<!-- <bean id="regularJob" class="com.manzz.clcw.module.fm.service.impl.FmWtOrderformServiceImpl"></bean> -->
	<bean id="doJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="fmWtOrderformService" />
		</property>
		<property name="targetMethod">
			<value>executeTask</value>
		</property>
	</bean>
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="doJob" />
		</property>
		<!-- cron表达式 -->
		<property name="cronExpression">
			<!-- 秒  分  时  日  月  周内日期  年  -->
			<!-- 每隔60秒执行一次 -->
			<value>0/60 * * * * ?</value>
		</property>
	</bean>
	<bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" autowire="no" >
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>
	
	
</beans>