<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manzz.clcw.module.sm.dao.SmRoleDAO" >

  <resultMap id="SmRoleResultMap" type="com.manzz.clcw.domain.SmRole" >
    <id column="ROLE_ID" property="roleId" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="ROLE_DESCRIPTION" property="roleDescription" jdbcType="VARCHAR" />
    <result column="OPER_ID" property="operId" jdbcType="VARCHAR" />
    <result column="OPER_TIME" property="operTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="SmRole_Column_List" >
    r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESCRIPTION, r.OPER_ID, r.OPER_TIME
  </sql>

  <select id="selectByPrimaryKey" resultMap="SmRoleResultMap" parameterType="java.lang.String" >
    select 
    <include refid="SmRole_Column_List" />
    from role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from role
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.manzz.clcw.domain.SmRole" >
    insert into role (ROLE_ID, ROLE_NAME, ROLE_DESCRIPTION, 
      OPER_ID, OPER_TIME)
    values (uuid(), #{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR}, 
      #{operId,jdbcType=VARCHAR}, now())
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.manzz.clcw.domain.SmRole" >
    update role
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null" >
        ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="operId != null" >
        OPER_ID = #{operId,jdbcType=VARCHAR},
      </if>
      <if test="operTime != null" >
        OPER_TIME = now(),
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.manzz.clcw.domain.SmRole" >
    update role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR},
      OPER_ID = #{operId,jdbcType=VARCHAR},
      OPER_TIME = now()
    where ROLE_ID = #{roleId,jdbcType=VARCHAR}
  </update>

  <sql id="Where_Condition" >
    <where >
      <if test="roleName != null and roleName != ''" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleDescription != null and roleDescription != ''" >
        AND ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <sql id="Where_Fuzzy_Condition" >
    <where >
      <if test="roleName != null and roleName != ''" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR}
      </if>
      <if test="roleDescription != null and roleDescription != ''" >
        AND ROLE_DESCRIPTION = #{roleDescription,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <select id="queryCount" parameterType="com.manzz.clcw.domain.SmRole" resultType="java.lang.Integer" >
    select count(0) from role
    <if test="isFuzzyQuery == false" >
      <include refid="Where_Condition" />
    </if>
    <if test="isFuzzyQuery == true" >
      <include refid="Where_Fuzzy_Condition" />
    </if>
  </select>

  <select id="queryPagedList" parameterType="com.manzz.clcw.domain.SmRole" resultMap="SmRoleResultMap" >
    select 
    <include refid="SmRole_Column_List" />
    from role r
    <if test="isFuzzyQuery == false" >
      <include refid="Where_Condition" />
    </if>
    <if test="isFuzzyQuery == true" >
      <include refid="Where_Fuzzy_Condition" />
    </if>
    <if test="sort != null" >
      ORDER BY ${sort} ${order}
    </if>
    <if test="sort == null" >
      ORDER BY OPER_TIME DESC
    </if>
  </select>
  <!-- 查询用户角色 -->
  <select id="queryUserRoles" resultMap="SmRoleResultMap" >
    select 
    <include refid="SmRole_Column_List" />
    from role r
    left join user_to_role ur on ur.ROLE_ID = r.ROLE_ID
    where ur.USER_ID = #{userId,jdbcType=VARCHAR}
    order by r.ROLE_NAME
  </select>
</mapper>